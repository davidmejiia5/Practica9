var search_data = {"index":{"searchIndex":["alimento","ambiental","lista","object","plato","practica6","error","<=>()","<=>()","each()","get_vct()","get_ali()","get_alimentos()","get_carbohidratos()","get_co2()","get_gas()","get_gramos()","get_lipidos()","get_m2()","get_proteinas()","get_te()","huella_nut()","incremento()","indice_energia()","indice_huella()","insert_alimento()","insert_gramos()","new()","new()","new()","pop_head()","pop_tail()","push()","to_s()","to_s()","to_s()","valor_energetico()","code_of_conduct","gemfile","gemfile.lock","guardfile","license","practica6.gemspec","readme","rakefile","setup"],"longSearchIndex":["alimento","ambiental","lista","object","plato","practica6","practica6::error","alimento#<=>()","ambiental#<=>()","lista#each()","plato#get_vct()","alimento#get_ali()","plato#get_alimentos()","plato#get_carbohidratos()","ambiental#get_co2()","alimento#get_gas()","plato#get_gramos()","plato#get_lipidos()","ambiental#get_m2()","plato#get_proteinas()","alimento#get_te()","ambiental#huella_nut()","ambiental#incremento()","ambiental#indice_energia()","ambiental#indice_huella()","plato#insert_alimento()","plato#insert_gramos()","alimento::new()","lista::new()","plato::new()","lista#pop_head()","lista#pop_tail()","lista#push()","alimento#to_s()","ambiental#to_s()","plato#to_s()","alimento#valor_energetico()","","","","","","","","",""],"info":[["Alimento","","Alimento.html","","<p>Clase para definir los alimentos y sus valores nutricionales\n"],["Ambiental","","Ambiental.html","","<p>Clase Ambiental, hereda de Plato\n"],["Lista","","Lista.html","","<p>Clase para representar alimentos en una lista\n"],["Object","","Object.html","",""],["Plato","","Plato.html","","<p>Clase para poder representar plato\n"],["Practica6","","Practica6.html","",""],["Practica6::Error","","Practica6/Error.html","",""],["<=>","Alimento","Alimento.html#method-i-3C-3D-3E","(toCompare)","<p>Método para poder comparar\n"],["<=>","Ambiental","Ambiental.html#method-i-3C-3D-3E","(other)","<p>Método para poder comparar\n"],["each","Lista","Lista.html#method-i-each","()","<p>Método iteración de la lista\n"],["get_VCT","Plato","Plato.html#method-i-get_VCT","()","<p>Método para obtener el valor calórico total\n"],["get_ali","Alimento","Alimento.html#method-i-get_ali","()","<p>Metodo para obtener el nombre del alimento\n"],["get_alimentos","Plato","Plato.html#method-i-get_alimentos","()","<p>Método para devolver la lista de alimentos\n"],["get_carbohidratos","Plato","Plato.html#method-i-get_carbohidratos","()","<p>Método para obtener el porcentaje de carbohidratos del plato\n"],["get_co2","Ambiental","Ambiental.html#method-i-get_co2","()","<p>Método para obtener el c02 total del plato por gramos\n"],["get_gas","Alimento","Alimento.html#method-i-get_gas","()","<p>Método para obtener el co2\n"],["get_gramos","Plato","Plato.html#method-i-get_gramos","()","<p>Método para devolver la lista de gramos\n"],["get_lipidos","Plato","Plato.html#method-i-get_lipidos","()","<p>Método para obtener el porcentaje de lípidos del plato\n"],["get_m2","Ambiental","Ambiental.html#method-i-get_m2","()","<p>Método para obtener la cantidad de terreno por gramos\n"],["get_proteinas","Plato","Plato.html#method-i-get_proteinas","()","<p>Método para obtener el porcentaje de proteinas del plato\n"],["get_te","Alimento","Alimento.html#method-i-get_te","()","<p>Método para obtener el terreno\n"],["huella_nut","Ambiental","Ambiental.html#method-i-huella_nut","()","<p>Método para calcular la huella nutricional\n"],["incremento","Ambiental","Ambiental.html#method-i-incremento","(v)","<p>Método para incrementar el vector de precios\n"],["indice_energia","Ambiental","Ambiental.html#method-i-indice_energia","()","<p>Métdodo para clcular el índice de energía\n"],["indice_huella","Ambiental","Ambiental.html#method-i-indice_huella","()","<p>Método para calcular el indice de huella de carbono\n"],["insert_alimento","Plato","Plato.html#method-i-insert_alimento","(alimento)","<p>Método para insertar alimento en la lista\n"],["insert_gramos","Plato","Plato.html#method-i-insert_gramos","(gramos)","<p>Método para insertar gramos en la lista\n"],["new","Alimento","Alimento.html#method-c-new","(a,p,c,l,g,t)","<p>Constructor de la clase alimi¡ento\n"],["new","Lista","Lista.html#method-c-new","()","<p>Constructor de la clase Lista\n"],["new","Plato","Plato.html#method-c-new","(name)","<p>Constructor de la clase Plato\n"],["pop_head","Lista","Lista.html#method-i-pop_head","()","<p>Método pop por la cabecera\n"],["pop_tail","Lista","Lista.html#method-i-pop_tail","()","<p>Método de extracción por la cola\n"],["push","Lista","Lista.html#method-i-push","(val)","<p>Método push\n"],["to_s","Alimento","Alimento.html#method-i-to_s","()","<p>Sobrecarga del to_s\n"],["to_s","Ambiental","Ambiental.html#method-i-to_s","()","<p>Sobrecarga del to_s\n"],["to_s","Plato","Plato.html#method-i-to_s","()","<p>Método to_s sobrecargado\n"],["valor_energetico","Alimento","Alimento.html#method-i-valor_energetico","()","<p>Método para obtener el valor energético\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>In the interest of fostering an open and welcoming environment, …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p>git_source(:github) {|repo_name| “github.com/#{repo_name}” } …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  Practica6 (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2019 David Mejia\n<p>Permission is hereby granted, free of charge, to any …\n"],["Practica6.gemspec","","Practica6_gemspec.html","","<p>lib = File.expand_path(“../lib”, __FILE__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"],["README","","README_md.html","","<p>Practica6\n<p>Autor:David Mejia Sanchez\n14-11-2019\n<p>Welcome to your new gem! In this directory, you&#39;ll find …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"]]}}